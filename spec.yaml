openapi: 3.0.0
info:
  title: Api Prod
  description: API для финального этапа олимпиады prod
  version: 1.0.0
servers:
  - url: https://api.prod.webtm.ru/api/
paths:
  /auth/register:
    post:
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Имя пользователя. Должно содержать только буквы латинского алфавита, цифры и дефисы.
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя. Должна быть длиной не более 50 символов.
                password:
                  type: string
                  format: password
                  description: Пароль пользователя. Должен содержать не менее 6 символов, хотя бы одну заглавную букву, одну строчную букву и одну цифру.
              required:
                - login
                - email
                - password
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Уникальный идентификатор пользователя
                  login:
                    type: string
                    description: Имя пользователя
                  email:
                    type: string
                    format: email
                    description: Электронная почта пользователя
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Сообщение об ошибке
        '409':
          description: Пользователь с такими данными уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Сообщение об ошибке
  /auth/sign-in:
    post:
      summary: Авторизоваться в аккаунт пользователя и получить jwt токен
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Имя пользователя. Должно содержать только буквы латинского алфавита, цифры и дефисы.
                password:
                  type: string
                  format: password
                  description: Пароль пользователя. Должен содержать не менее 6 символов, хотя бы одну заглавную букву, одну строчную букву и одну цифру.
              required:
                - login
                - password
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Сгенерированный токен пользователя
        '401':
          description: Переданный токен не существует либо некорректен
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Сообщение об ошибке
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Сообщение об ошибке
  /me/profile:
    get:
      summary: Получение собственного профиля
      description: Значение токена будет подставляться в заголовок `Authorization` в формате `Bearer {token}`.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Передан действительный токен, в ответе возвращается профиль пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Уникальный идентификатор пользователя
                  login:
                    type: string
                    description: Имя пользователя
                  email:
                    type: string
                    format: email
                    description: Электронная почта пользователя
        '401':
          description: Переданный токен не существует либо некорректен
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Сообщение об ошибке


